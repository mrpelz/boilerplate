image: node:latest

cache:
  paths:
    - node_modules/
    - dist/

stages:
  - prepare
  - check
  - deploy

install dependencies:
  stage: prepare
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - npm install

latest commit message:
  stage: check
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - make check_commit

package.json:
  stage: check
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - make check_package_json

lint:
  stage: check
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - make check_lint

config:
  stage: check
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - make check_config

typescript:
  stage: check
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - make check_typescript

test:
  stage: check
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - make check_test

prerelease:
  stage: deploy
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
  allow_failure: true
  script:
    - git config user.email "$CI_BOT_EMAIL"
    - git config user.name "$CI_BOT_NAME"
    - git remote add gitlab_origin "$CI_BOT_ORIGIN"
    - |
      TAG=$(npm version prerelease --preid "$CI_COMMIT_REF_SLUG")
      curl -s -H "PRIVATE-TOKEN: $CI_BOT_TOKEN" -X DELETE "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/tags/$TAG" >/dev/null
    - git push gitlab_origin --tags

patch release:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
  allow_failure: true
  script:
    - git config user.email "$CI_BOT_EMAIL"
    - git config user.name "$CI_BOT_NAME"
    - git remote add gitlab_origin "$CI_BOT_ORIGIN"
    - npm version patch
    - git push gitlab_origin --tags
    - git push gitlab_origin "HEAD:$CI_COMMIT_REF_NAME" --push-option=ci.skip

minor release:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
  allow_failure: true
  script:
    - git config user.email "$CI_BOT_EMAIL"
    - git config user.name "$CI_BOT_NAME"
    - git remote add gitlab_origin "$CI_BOT_ORIGIN"
    - npm version minor
    - git push gitlab_origin --tags
    - git push gitlab_origin "HEAD:$CI_COMMIT_REF_NAME" --push-option=ci.skip

major release:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
  allow_failure: true
  script:
    - git config user.email "$CI_BOT_EMAIL"
    - git config user.name "$CI_BOT_NAME"
    - git remote add gitlab_origin "$CI_BOT_ORIGIN"
    - npm version major
    - git push gitlab_origin --tags
    - git push gitlab_origin "HEAD:$CI_COMMIT_REF_NAME" --push-option=ci.skip

publish:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "<Do actual publishing to registry here>"
