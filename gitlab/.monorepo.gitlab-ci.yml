include: "/gitlab/.gitlab-ci.yml"

npm install:
  script:
    - for NPM_CONFIG in $NPM_INSTALL_ADDITIONAL_CONFIG; do npm config set "${NPM_CONFIG}"; done
    - npm ci --workspaces --include-workspace-root --audit=false --fund=false

check_package_json:
  script:
    - make -s check_package_json
    - for PACKAGE in packages/*; do make -s -C "$PACKAGE" check_package_json "$PACKAGE"; done

check_lint:
  script:
    - make -s check_lint
    - for PACKAGE in packages/*; do make -s -C "$PACKAGE" check_lint; done

check_config:
  script:
    - make -s check_config
    - for PACKAGE in packages/*; do make -s -C "$PACKAGE" check_config; done

check_typescript:
  script:
    - make -s check_typescript
    - for PACKAGE in packages/*; do make -s -C "$PACKAGE" check_typescript; done

check_test:
  script:
    - make -s check_test
    - for PACKAGE in packages/*; do make -s -C "$PACKAGE" check_test; done

transform_prod:
  script:
    - make -s transform_prod
    - for PACKAGE in packages/*; do make -s -C "$PACKAGE" transform_prod; done

tag:prerelease:
  script:
    - git config user.email "${CI_BOT_EMAIL}"
    - git config user.name "${CI_BOT_NAME}"
    - git remote add gitlab_origin "${CI_BOT_ORIGIN}"
    - for NPM_CONFIG in $NPM_INSTALL_ADDITIONAL_CONFIG; do npm config set "${NPM_CONFIG}"; done
    - npm version prerelease --workspaces --include-workspace-root --audit=false --fund=false --git-tag-version=false --preid "${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}"
    - git add --all .
    - git commit -m "$(make -s util_get_version 2>/dev/null)"
    - git tag "v$(make -s util_get_version 2>/dev/null)"
    - git push gitlab_origin --tags

tag:patch:
  script:
    - git config user.email "${CI_BOT_EMAIL}"
    - git config user.name "${CI_BOT_NAME}"
    - git remote add gitlab_origin "${CI_BOT_ORIGIN}"
    - for NPM_CONFIG in $NPM_INSTALL_ADDITIONAL_CONFIG; do npm config set "${NPM_CONFIG}"; done
    - npm version patch --workspaces --include-workspace-root --audit=false --fund=false --git-tag-version=false
    - git add --all .
    - git commit -m "$(make -s util_get_version 2>/dev/null)"
    - git tag "v$(make -s util_get_version 2>/dev/null)"
    - git push gitlab_origin "HEAD:${CI_COMMIT_REF_NAME}" --push-option=ci.skip
    - git push gitlab_origin --tags

tag:minor:
  script:
    - git config user.email "${CI_BOT_EMAIL}"
    - git config user.name "${CI_BOT_NAME}"
    - git remote add gitlab_origin "${CI_BOT_ORIGIN}"
    - for NPM_CONFIG in $NPM_INSTALL_ADDITIONAL_CONFIG; do npm config set "${NPM_CONFIG}"; done
    - npm version minor --workspaces --include-workspace-root --audit=false --fund=false --git-tag-version=false
    - git add --all .
    - git commit -m "$(make -s util_get_version 2>/dev/null)"
    - git tag "v$(make -s util_get_version 2>/dev/null)"
    - git push gitlab_origin "HEAD:${CI_COMMIT_REF_NAME}" --push-option=ci.skip
    - git push gitlab_origin --tags

tag:major:
  script:
    - git config user.email "${CI_BOT_EMAIL}"
    - git config user.name "${CI_BOT_NAME}"
    - git remote add gitlab_origin "${CI_BOT_ORIGIN}"
    - for NPM_CONFIG in $NPM_INSTALL_ADDITIONAL_CONFIG; do npm config set "${NPM_CONFIG}"; done
    - npm version major --workspaces --include-workspace-root --audit=false --fund=false --git-tag-version=false
    - git add --all .
    - git commit -m "$(make -s util_get_version 2>/dev/null)"
    - git tag "v$(make -s util_get_version 2>/dev/null)"
    - git push gitlab_origin "HEAD:${CI_COMMIT_REF_NAME}" --push-option=ci.skip
    - git push gitlab_origin --tags

publish:gitlab:
  script:
    - npm config set "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}"
    - npm config set "@${CI_PROJECT_NAMESPACE}:registry=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/"
    - for NPM_CONFIG in $NPM_INSTALL_ADDITIONAL_CONFIG; do npm config set "${NPM_CONFIG}"; done
    - npm publish --workspaces

publish:npm:
  script:
    - npm config set "//registry.npmjs.org/:_authToken=${BOILERPLATE_PUBLISH_NPM_TOKEN}"
    - for NPM_CONFIG in $NPM_INSTALL_ADDITIONAL_CONFIG; do npm config set "${NPM_CONFIG}"; done
    - npm pkg set "repository.url=${BOILERPLATE_PUBLISH_NPM_GIT_URL}"
    - npm publish --workspaces --access public
